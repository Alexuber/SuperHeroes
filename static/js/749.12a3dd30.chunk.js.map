{"version":3,"file":"static/js/749.12a3dd30.chunk.js","mappings":"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","sources":["utils/validateImages.js","utils/getFormDataFiles.js","utils/validationSchema.js","webpack://super-heroes/./src/components/HeroForm/HeroForm.module.scss?2949","components/HeroForm/HeroForm.jsx","pages/AddSuperHeroPage/AddSuperHeroPage.jsx","redux/hero/hero-selectors.js","shared/components/BackLink/BackLink.jsx"],"sourcesContent":["export default function validateImages(images, form) {\n  for (let i = 0; i < images.length; i++) {\n    const file = images[i];\n    const supportedFormats = ['image/jpg', 'image/jpeg', 'image/png'];\n    if (!supportedFormats.includes(file.type)) {\n      form.setFieldError(\n        'images',\n        'Invalid file format. Only JPG, JPEG, PNG, and WEBP formats are allowed.'\n      );\n      return;\n    }\n  }\n}\n","const getFormDataFiles = (formData, field) => {\n  const files = [];\n\n  const fileList = formData.getAll(field);\n\n  for (let i = 0; i < fileList.length; i++) {\n    files.push(fileList[i]);\n  }\n\n  return files;\n};\n\nexport default getFormDataFiles;\n","import * as Yup from 'yup';\nconst regEx = /^[A-Za-z\\s]+$/;\n\nexport const validationSchema = Yup.object({\n  nickname: Yup.string()\n    .min(3, '3 characters minimum')\n    .max(30, '30 characters maximum')\n    .matches(regEx, 'English letters only')\n    .required('Nickname is a required field'),\n  real_name: Yup.string()\n    .min(3, '3 characters minimum')\n    .max(30, '30 characters maximum')\n    .matches(regEx, 'English letters only')\n    .required('Real name is a required field'),\n  origin_description: Yup.string()\n    .min(3, '3 characters minimum')\n    .max(1000, '1000 characters maximum')\n    .required('Description is a required field'),\n  catch_phrase: Yup.string()\n    .min(3, '3 characters minimum')\n    .max(600, '100 characters maximum')\n    .required('Catch phrase is a required field'),\n  superpowers: Yup.array()\n    .of(\n      Yup.string()\n        .min(3, '3 characters minimum')\n        .max(50, '50 characters maximum')\n        .label('Superpower')\n    )\n    .required('Superpowers are required')\n    .min(1, 'Please add at least one superpower'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"textField__input\":\"HeroForm_textField__input__gQaKX\",\"textField__label\":\"HeroForm_textField__label__AEmO8\",\"container\":\"HeroForm_container__+2lQ0\",\"errorMessage\":\"HeroForm_errorMessage__+uoLp\",\"form\":\"HeroForm_form__vn8dx\"};","import { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/hero/hero-selectors';\nimport { Loader } from 'shared/components/Loader/Loader';\nimport { Button, Typography, Box } from '@mui/material';\nimport { addHero, changeHeroById } from 'redux/hero/hero-operations';\nimport validateImages from 'utils/validateImages';\nimport getFormDataFiles from 'utils/getFormDataFiles';\nimport { validationSchema } from 'utils/validationSchema';\nimport styles from './HeroForm.module.scss';\n\nconst HeroForm = ({ selectedHero, handleSubmitEditHero }) => {\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, form) => {\n    const { images, ...rest } = values;\n    const formData = new FormData();\n\n    for (const file of Object.values(images)) {\n      formData.append('images', file);\n    }\n\n    Object.entries(rest).forEach(([fieldName, fieldValue]) => {\n      formData.append(fieldName, fieldValue);\n    });\n\n    if (!selectedHero) {\n      if (images.length === 0) {\n        form.setFieldError('images', 'Please select at least one image');\n        return;\n      }\n    }\n    validateImages(images, form);\n    await sendHero(formData);\n    form.resetForm();\n  };\n\n  const sendHero = async data => {\n    const nickname = data.get('nickname');\n    const real_name = data.get('real_name');\n    const origin_description = data.get('origin_description');\n    const catch_phrase = data.get('catch_phrase');\n    const superpowers = data.get('superpowers').split(',');\n    const images = getFormDataFiles(data, 'images');\n\n    const formData = {\n      nickname,\n      real_name,\n      origin_description,\n      catch_phrase,\n      superpowers,\n      images,\n    };\n\n    if (selectedHero) {\n      const id = selectedHero._id;\n      await editHeroInfo({ formData, id });\n    } else {\n      await addNewHero(formData);\n    }\n  };\n\n  const editHeroInfo = async data => {\n    dispatch(changeHeroById(data));\n    handleSubmitEditHero();\n  };\n\n  const addNewHero = async formData => {\n    dispatch(addHero(formData));\n  };\n\n  return (\n    <Box>\n      <Formik\n        initialValues={{\n          nickname: selectedHero ? selectedHero.nickname : '',\n          real_name: selectedHero ? selectedHero.real_name : '',\n          origin_description: selectedHero\n            ? selectedHero.origin_description\n            : '',\n          catch_phrase: selectedHero ? selectedHero.catch_phrase : '',\n          superpowers: selectedHero ? selectedHero.superpowers : [],\n          images: [],\n        }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue }) => (\n          <Form className={styles.form}>\n            {!selectedHero && (\n              <Typography\n                sx={{ marginBottom: '20px', textAlign: 'center' }}\n                variant=\"h5\"\n              >\n                Add new SuperHero!\n              </Typography>\n            )}\n            <Box className={styles.container}>\n              <Typography htmlFor=\"nickname\">Nickname</Typography>\n              <Field\n                type=\"text\"\n                id=\"nickname\"\n                name=\"nickname\"\n                className={styles.textField__input}\n              />\n              <ErrorMessage\n                name=\"nickname\"\n                component=\"div\"\n                className={styles.textField__input}\n              />\n            </Box>\n            <Box className={styles.container}>\n              <Typography htmlFor=\"real_name\">Real Name</Typography>\n              <Field\n                type=\"text\"\n                id=\"real_name\"\n                name=\"real_name\"\n                className={styles.textField__input}\n              />\n              <ErrorMessage\n                name=\"real_name\"\n                component=\"div\"\n                className={styles.errorMessage}\n              />\n            </Box>\n            <Box className={styles.container}>\n              <Typography htmlFor=\"origin_description\">Description</Typography>\n              <Field\n                as=\"textarea\"\n                id=\"origin_description\"\n                name=\"origin_description\"\n                className={styles.textField__input}\n              />\n              <ErrorMessage\n                name=\"origin_description\"\n                component=\"div\"\n                className={styles.errorMessage}\n              />\n            </Box>\n            <Box className={styles.container}>\n              <Typography htmlFor=\"catch_phrase\">Catch phrase</Typography>\n              <Field\n                as=\"textarea\"\n                id=\"catch_phrase\"\n                name=\"catch_phrase\"\n                className={styles.textField__input}\n              />\n              <ErrorMessage\n                name=\"catch_phrase\"\n                component=\"div\"\n                className={styles.errorMessage}\n              />\n            </Box>\n            <Box className={styles.container}>\n              <Typography>Superpowers</Typography>\n              <FieldArray name=\"superpowers\">\n                {({ push, remove, form }) => (\n                  <div>\n                    {form.values.superpowers.map((_, index) => (\n                      <div key={index}>\n                        <Field\n                          name={`superpowers.${index}`}\n                          className={styles.textField__input}\n                        />\n                        <Button\n                          variant=\"outlined\"\n                          type=\"button\"\n                          onClick={() => remove(index)}\n                        >\n                          -\n                        </Button>\n                        <Button\n                          variant=\"outlined\"\n                          type=\"button\"\n                          onClick={() => push('')}\n                        >\n                          +\n                        </Button>\n                      </div>\n                    ))}\n                    <Button\n                      variant=\"outlined\"\n                      sx={{ marginTop: '8px' }}\n                      type=\"button\"\n                      onClick={() => push('')}\n                    >\n                      Add Superpower\n                    </Button>\n                  </div>\n                )}\n              </FieldArray>\n              <ErrorMessage\n                name=\"superpowers\"\n                component=\"div\"\n                className={styles.errorMessage}\n              />\n            </Box>{' '}\n            <Box className={styles.container}>\n              <label htmlFor=\"images\">Images</label>\n              <input\n                className={styles.textField__input}\n                type=\"file\"\n                id=\"images\"\n                name=\"images\"\n                accept=\".jpg, .jpeg, .png, .webp\"\n                multiple\n                onChange={event => {\n                  const fileList = Array.from(event.target.files);\n                  setFieldValue('images', fileList);\n                }}\n              />\n              <ErrorMessage\n                name=\"images\"\n                component=\"div\"\n                className={styles.errorMessage}\n              />\n            </Box>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              sx={{ width: '160px', margin: '0 auto' }}\n            >\n              {!isLoading && 'Submitt'}\n              {isLoading && (\n                <Loader with=\"25px\" height=\"25px\" color=\"#e0e1e6\" />\n              )}\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default HeroForm;\n","import { useLocation } from 'react-router-dom';\nimport BackLink from 'shared/components/BackLink/BackLink';\nimport { Container } from '@mui/material';\nimport HeroForm from 'components/HeroForm/HeroForm';\n\nconst AddSuperHeroPage = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <Container maxWidth=\"lg\">\n      <main>\n        <BackLink to={backLinkHref}>Back</BackLink>\n        <HeroForm />\n      </main>\n    </Container>\n  );\n};\n\nexport default AddSuperHeroPage;\n","export const selectIsLoading = state => state.heroesData.isLoading;\nexport const selectIsError = state => state.heroesData.error;\nexport const selectAllHeroes = state => state.heroesData.heroes;\nexport const selectCurrentHero = state => state.heroesData.currentHero;\nexport const selectHeroById = (state, heroId) => {\n  const allHeroes = selectAllHeroes(state);\n  return allHeroes.find(hero => hero._id === heroId) || null;\n};\n","import { Link } from 'react-router-dom';\nimport { Button } from '@mui/material';\nimport KeyboardBackspaceRoundedIcon from '@mui/icons-material/KeyboardBackspaceRounded';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <Button\n      sx={{ marginRight: 'auto', marginBottom: '28px', marginTop: '28px' }}\n      component={Link}\n      to={to}\n      startIcon={<KeyboardBackspaceRoundedIcon />}\n      size=\"small\"\n      color=\"black\"\n      variant=\"backBtn\"\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default BackLink;\n"],"names":["validateImages","images","form","i","length","file","includes","type","setFieldError","formData","field","files","fileList","getAll","push","regEx","validationSchema","Yup","nickname","min","max","matches","required","real_name","origin_description","catch_phrase","superpowers","of","label","selectedHero","handleSubmitEditHero","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","handleSubmit","values","rest","FormData","Object","append","entries","forEach","fieldName","fieldValue","sendHero","resetForm","data","get","split","getFormDataFiles","id","_id","editHeroInfo","addNewHero","changeHeroById","addHero","Box","initialValues","onSubmit","setFieldValue","className","styles","Typography","sx","marginBottom","textAlign","variant","htmlFor","name","component","as","remove","map","_","index","Button","onClick","marginTop","accept","multiple","onChange","event","Array","from","target","color","width","margin","Loader","with","height","backLinkHref","useLocation","state","maxWidth","to","heroesData","selectAllHeroes","heroes","selectHeroById","heroId","find","hero","children","marginRight","Link","startIcon","size"],"sourceRoot":""}