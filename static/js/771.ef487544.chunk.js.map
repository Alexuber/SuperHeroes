{"version":3,"file":"static/js/771.ef487544.chunk.js","mappings":"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","sources":["components/HeroForm/HeroForm.jsx","pages/AddSuperHeroPage/AddSuperHeroPage.jsx","shared/BackLink/BackLink.jsx"],"sourcesContent":["import React from 'react';\nimport { Button } from '@mui/material';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst regEx = /^[A-Za-z\\s]+$/;\n\nconst validationSchema = Yup.object({\n  nickname: Yup.string()\n    .min(3, '3 characters minimum')\n    .max(30, '30 characters maximum')\n    .matches(regEx, 'English letters only')\n    .required('Nickname is a required field'),\n  real_name: Yup.string()\n    .min(3, '3 characters minimum')\n    .max(30, '30 characters maximum')\n    .matches(regEx, 'English letters only')\n    .required('Real name is a required field'),\n  origin_description: Yup.string()\n    .min(3, '3 characters minimum')\n    .max(300, '300 characters maximum')\n    .matches(regEx, 'English letters only')\n    .required('Description is a required field'),\n  superpowers: Yup.array()\n    .of(\n      Yup.string()\n        .min(3, '3 characters minimum')\n        .max(30, '30 characters maximum')\n        .matches(regEx, 'English letters only')\n        .label('Superpower')\n    )\n    .required('Superpowers are required')\n    .min(1, 'Please add at least one superpower'),\n  images: Yup.array()\n    .of(\n      Yup.mixed().test('fileFormat', 'Invalid file format', function (value) {\n        if (value && value.length > 0) {\n          for (let i = 0; i < value.length; i++) {\n            const file = value[i];\n            const supportedFormats = [\n              'image/jpeg',\n              'image/jpg',\n              'image/png',\n              'image/webp',\n            ];\n            const isValidFormat = supportedFormats.includes(file.type);\n            if (!isValidFormat) {\n              return false;\n            }\n          }\n        }\n        return true;\n      })\n    )\n    .min(1, 'Please select at least one image')\n    .required('Please select at least one image'),\n});\n\nconst HeroForm = () => {\n  const handleSubmit = async values => {\n    const { images, ...rest } = values;\n    const formData = new FormData();\n\n    Object.values(images).forEach(file => {\n      formData.append('images', file);\n    });\n\n    Object.entries(rest).forEach(([fieldName, fieldValue]) => {\n      formData.append(fieldName, fieldValue);\n    });\n\n    console.log('FormData contents:');\n    for (const pair of formData.entries()) {\n      console.log(pair[0], pair[1]);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        nickname: '',\n        real_name: '',\n        origin_description: '',\n        superpowers: [],\n        images: [],\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, setFieldValue }) => (\n        <Form\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            maxWidth: '400px',\n          }}\n        >\n          <div style={{ marginBottom: '1rem' }}>\n            <label htmlFor=\"nickname\">Nickname</label>\n            <Field\n              type=\"text\"\n              id=\"nickname\"\n              name=\"nickname\"\n              style={{ width: '100%', padding: '0.5rem' }}\n            />\n            <ErrorMessage\n              name=\"nickname\"\n              component=\"div\"\n              style={{ color: 'red' }}\n            />\n          </div>\n          <div style={{ marginBottom: '1rem' }}>\n            <label htmlFor=\"real_name\">Real Name</label>\n            <Field\n              type=\"text\"\n              id=\"real_name\"\n              name=\"real_name\"\n              style={{ width: '100%', padding: '0.5rem' }}\n            />\n            <ErrorMessage\n              name=\"real_name\"\n              component=\"div\"\n              style={{ color: 'red' }}\n            />\n          </div>\n          <div style={{ marginBottom: '1rem' }}>\n            <label htmlFor=\"origin_description\">Description</label>\n            <Field\n              as=\"textarea\"\n              id=\"origin_description\"\n              name=\"origin_description\"\n              style={{ width: '100%', padding: '0.5rem' }}\n            />\n            <ErrorMessage\n              name=\"origin_description\"\n              component=\"div\"\n              style={{ color: 'red' }}\n            />\n          </div>\n          <div style={{ marginBottom: '1rem' }}>\n            <label>Superpowers</label>\n            <FieldArray name=\"superpowers\">\n              {({ push, remove, form }) => (\n                <div>\n                  {form.values.superpowers.map((_, index) => (\n                    <div key={index}>\n                      <Field\n                        name={`superpowers[${index}]`}\n                        style={{ width: '100%', padding: '0.5rem' }}\n                      />\n                      {index > 0 && (\n                        <button type=\"button\" onClick={() => remove(index)}>\n                          Remove\n                        </button>\n                      )}\n                    </div>\n                  ))}\n                  <button type=\"button\" onClick={() => push('')}>\n                    Add Superpower\n                  </button>\n                </div>\n              )}\n            </FieldArray>\n            <ErrorMessage\n              name=\"superpowers\"\n              component=\"div\"\n              style={{ color: 'red' }}\n            />\n          </div>\n          <div style={{ marginBottom: '1rem' }}>\n            <label htmlFor=\"images\">Images</label>\n            <input\n              type=\"file\"\n              id=\"images\"\n              name=\"images\"\n              accept=\".jpg, .jpeg, .png, .webp\"\n              multiple\n              onChange={event => {\n                const fileList = Array.from(event.target.files);\n                setFieldValue('images', fileList);\n              }}\n              style={{ padding: '0.5rem' }}\n            />\n            <ErrorMessage\n              name=\"images\"\n              component=\"div\"\n              style={{ color: 'red' }}\n            />\n          </div>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default HeroForm;\n","import { useLocation } from 'react-router-dom';\nimport BackLink from 'shared/BackLink/BackLink';\nimport { Container } from '@mui/material';\nimport HeroForm from 'components/HeroForm/HeroForm';\n\nconst AddSuperHeroPage = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <Container maxWidth=\"xl\">\n      <main>\n        <BackLink to={backLinkHref}>Back</BackLink>\n        <HeroForm />\n      </main>\n    </Container>\n  );\n};\n\nexport default AddSuperHeroPage;\n","import { Button } from '@mui/material';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport KeyboardBackspaceRoundedIcon from '@mui/icons-material/KeyboardBackspaceRounded';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <Button\n      sx={{ marginRight: 'auto', marginBottom: '28px' }}\n      component={Link}\n      to={to}\n      startIcon={<KeyboardBackspaceRoundedIcon />}\n      size=\"small\"\n      color=\"black\"\n      variant=\"backBtn\"\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default BackLink;\n"],"names":["regEx","validationSchema","Yup","nickname","min","max","matches","required","real_name","origin_description","superpowers","of","label","images","test","value","length","i","file","includes","type","handleSubmit","values","rest","formData","FormData","Object","forEach","append","entries","fieldName","fieldValue","console","log","pair","initialValues","onSubmit","setFieldValue","style","display","flexDirection","maxWidth","marginBottom","htmlFor","id","name","width","padding","component","color","as","push","remove","form","map","_","index","onClick","accept","multiple","onChange","event","fileList","Array","from","target","files","Button","variant","backLinkHref","useLocation","state","Container","BackLink","to","children","sx","marginRight","Link","startIcon","size"],"sourceRoot":""}